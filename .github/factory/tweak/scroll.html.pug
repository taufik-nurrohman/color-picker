extends ../_index.pug

block state
  - const scripts = ['../index.min.js']
  - const styles = ['../index.min.css']
  - const title = 'Color Picker'

block style
  style
    | * {
    |   margin: 0;
    |   padding: 0;
    | }
    |
    | body {
    |   padding: 5%;
    |   overflow: hidden;
    | }
    |
    | section {
    |   width: 50%;
    |   height: 500px;
    |   float: left;
    |   overflow: auto;
    | }
    |
    | section + section {
    |   float: right;
    | }
    |
    | section p {
    |   margin: 0;
    |   padding: 4em;
    |   padding-top: 250px;
    |   width: 150%;
    |   height: 500px;
    | }

block script
  script
    | function scrollFollowColorPicker(picker, container) {
    |     picker._scrollPane = container;
    |     picker.on('enter', function () {
    |         this._initScrollPosition = {
    |             x: this._scrollPane.scrollTop,
    |             y: this._scrollPane.scrollLeft
    |         };
    |         this.self.style.marginTop = 0;
    |         this.self.style.marginLeft = 0;
    |     });
    |     container.addEventListener('scroll', function () {
    |         let initScrollPosition = picker._initScrollPosition;
    |         if (!initScrollPosition) {
    |             return;
    |         }
    |         picker.self.style.marginTop = (initScrollPosition.x - this.scrollTop) + 'px';
    |         picker.self.style.marginLeft = (initScrollPosition.y - this.scrollLeft) + 'px';
    |     });
    | }
    |
    | let sources = document.querySelectorAll('input'),
    |     picker_1 = new CP(sources[0]),
    |     picker_2 = new CP(sources[1]);
    |
    | function onChange(r, g, b, a) {
    |     this.source.value = this.color(r, g, b, a);
    | }
    |
    | picker_1.on('change', onChange);
    | picker_2.on('change', onChange);
    |
    | scrollFollowColorPicker(picker_2, document.querySelector('#pane-2'));

block content
  main
    section(id='pane-1')
      p
        strong Normal:
        br
        input(type='text')
    section(id='pane-2')
      p
        strong Custom:
        br
        input(type='text')